{"version":3,"sources":["components/Header.js","components/Picture.js","components/Letter.js","components/Word.js","components/Mistakes.js","components/Hangman.js","App.js","index.js"],"names":["Header","props","title","Picture","style","width","height","src","image","alt","Letter","value","Word","wordStyle","fontSize","margin","word","map","letter","Mistakes","wrongLetters","gameStarted","mistakes","included","mistakesStyle","display","Hangman","textInput","useRef","guess","useState","length","setTitle","wordToGuess","setWordToGuess","process","picture","setPicture","guessedWord","setGuessedWord","fillMistakes","push","changeStage","fillGuessedWord","resultWord","forEach","i","current","focus","useEffect","url","apiUri","fetch","then","response","ok","json","alert","catch","error","message","data","normalize","replace","removeAccentMarks","toString","console","log","toUpperCase","requestWord","errorsLeft","newTitle","newPicture","won","join","evalWin","loose","evalLoose","runValidations","key","test","isKeyValid","includes","isKeyRepeated","ref","tabIndex","onKeyPress","event","guessLetter","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5acdaa15.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <h1>Hangman</h1>\n      <h3>{props.title}</h3>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Picture = (props) => {\n  const imageStyle = {\n    width: \"360px\",\n    height: \"480px\",\n  };\n  return <img style={imageStyle} src={props.image} alt={props.title} />;\n};\n\nexport default Picture;\n","import React from \"react\";\n\nconst Letter = (props) => {\n  return <span style={props.style}>{props.value}</span>;\n};\n\nexport default Letter;\n","import React from \"react\";\nimport Letter from \"./Letter\";\n\nconst Word = (props) => {\n  const wordStyle = {\n    fontSize: \"2em\",\n    margin: \"0.25em\",\n  };\n\n  return (\n    <div>\n      {props.word.map((letter) => (\n        <Letter style={wordStyle} value={letter} />\n      ))}\n    </div>\n  );\n};\n\nexport default Word;\n","import React from \"react\";\nimport Word from \"./Word\";\n\nconst Mistakes = (props) => {\n  return (\n    <div style={props.style}>\n      <h3>Mistakes:</h3>\n      <Word word={props.wrongLetters} />\n    </div>\n  );\n};\n\nexport default Mistakes;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Header from \"./Header\";\nimport Picture from \"./Picture\";\nimport Word from \"./Word\";\nimport Mistakes from \"./Mistakes\";\n\nvar gameStarted = false;\nvar maximumFailedAttemps = 6;\nvar mistakes = [];\nvar included = false;\nvar mistakesStyle = { display: \"none\" };\n\nconst Hangman = (props) => {\n  const apiUrl = \"https://random-word-api.herokuapp.com\";\n  let textInput = useRef(null);\n  let guess = \"\";\n\n  const [title, setTitle] = useState(\n    `Press Any Key to Get Started!. Error left: ${\n      maximumFailedAttemps - mistakes.length\n    }`\n  );\n  const [wordToGuess, setWordToGuess] = useState(\"\");\n  const [picture, setPicture] = useState(\n    `${process.env.PUBLIC_URL}/pictures/hangman-${mistakes.length}.png`\n  );\n  const [guessedWord, setGuessedWord] = useState([]);\n\n  const setMistakes = (list) => {\n    mistakes = list;\n  };\n\n  const removeAccentMarks = (word) => {\n    return word.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  };\n\n  const requestWord = (url) => {\n    let word = \"\";\n    const apiUri = `${apiUrl}/word`;\n    fetch(apiUri)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          alert(\"Service is up but HTTP response was not OK\");\n        }\n      })\n      .catch((error) => {\n        alert(`There was a problem trying to reach the api:${error.message}`);\n      })\n      .then((data) => {\n        word = removeAccentMarks(data.toString());\n        console.log(word);\n        setWordToGuess(word.toUpperCase());\n      });\n  };\n\n  const fillMistakes = () => {\n    let wrongLetters = mistakes;\n    wrongLetters.push(guess);\n    mistakesStyle = { display: \"block\" };\n    setMistakes(wrongLetters);\n    changeStage();\n  };\n\n  const guessLetter = () => {\n    const word = [...wordToGuess];\n    included = word.includes(guess);\n    if (included) {\n      fillGuessedWord(word, included);\n    } else {\n      fillMistakes(included);\n    }\n  };\n\n  const fillGuessedWord = (word, included) => {\n    const notGuessed = \"_\";\n    let resultWord = [];\n    if (gameStarted === false) {\n      [...wordToGuess].forEach(() => {\n        resultWord.push(notGuessed);\n      });\n    } else {\n      for (let i = 0; i < wordToGuess.length; i++) {\n        if (wordToGuess[i] === guess) {\n          resultWord.push(guess);\n        } else if (guessedWord[i] !== notGuessed) {\n          resultWord.push(guessedWord[i]);\n        } else {\n          resultWord.push(notGuessed);\n        }\n      }\n    }\n    setGuessedWord(resultWord);\n    textInput.current.focus();\n  };\n\n  useEffect(() => {\n    if (wordToGuess === \"\") {\n      requestWord();\n    }\n  });\n\n  useEffect(() => {\n    if (wordToGuess !== \"\") {\n      fillGuessedWord([...wordToGuess]);\n    }\n  }, [wordToGuess]);\n\n  useEffect(() => {\n    changeStage();\n  }, [guessedWord]);\n\n  const handleKeyPress = (event) => {\n    guess = event.key.toUpperCase();\n    try {\n      runValidations(guess);\n      if (mistakes.length < maximumFailedAttemps) {\n        gameStarted = true;\n        guessLetter();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const evalWin = () => {\n    let won = false;\n    if (wordToGuess === guessedWord.join(\"\") && gameStarted) {\n      won = true;\n    }\n    return won;\n  };\n\n  const evalLoose = () => {\n    let loose = false;\n    if (mistakes.length === maximumFailedAttemps) {\n      loose = true;\n    }\n    return loose;\n  };\n\n  const changeStage = () => {\n    if (gameStarted) {\n      const errorsLeft = maximumFailedAttemps - mistakes.length;\n      let newTitle = `Choose Another Letter. Errors Left: ${errorsLeft}`;\n      let newPicture = picture;\n      if (included && evalWin()) {\n        newTitle = \"You Win!\";\n        newPicture = `${process.env.PUBLIC_URL}/pictures/hangman-win.gif`;\n      } else if (!included) {\n        newPicture = `${process.env.PUBLIC_URL}/pictures/hangman-${mistakes.length}.png`;\n        if (evalLoose()) {\n          newTitle = \"You Loose! :(\";\n        }\n      }\n      setTitle(newTitle);\n      setPicture(newPicture);\n    }\n  };\n\n  const isKeyValid = (key) => {\n    const policy = /[A-Z]/;\n    if (!policy.test(key)) {\n      const error = `The key '${key}' has been pressed but only letters between A and Z are supported`;\n      throw error;\n    }\n  };\n\n  const isKeyRepeated = (key) => {\n    if (mistakes.includes(key) || guessedWord.includes(key)) {\n      const error = `The letter '${key}' has already been entered`;\n      throw error;\n    }\n  };\n\n  const runValidations = (key) => {\n    isKeyValid(key);\n    isKeyRepeated(key);\n  };\n\n  return (\n    <div ref={textInput} tabIndex={-1} onKeyPress={handleKeyPress}>\n      <Header title={title} />\n      <Word word={guessedWord} />\n      <Picture image={picture} />\n      <Mistakes style={mistakesStyle} wrongLetters={mistakes} />\n    </div>\n  );\n};\n\nexport default Hangman;\n","import \"./App.css\";\nimport Hangman from \"./components/Hangman\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Hangman />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}